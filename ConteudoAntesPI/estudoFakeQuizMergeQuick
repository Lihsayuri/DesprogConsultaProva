v[] = {9}, l = 0, m = 3 e r = 7.


{2, 3, 4, 5, 6, 7, 8, 9}


PARTICIONA

{0, 6, 2, 9, 1, 3}

{0, 2, 6, 9, 1, 3}

p = 0;


i = 0; i < 5; i ++


------------------------------

int v[] = {4, 5, 9, 6, 7, 8};
int l = 0;
int m = 2;
int r = 5;


void combina(int v[], int temp[], int l, int m, int r) {
    int i = l;
    int j = m + 1;
    int k;

    for (k = l; k <= r; k++) {
        if (i > m) {        // Se i estourou, copiamos j.
            temp[k] = v[j];
            j++;
        } else if (j > r) { // Se j estourou, copiamos i.
            temp[k] = v[i];
            i++;
        } else if (v[i] > v[j]) {
            temp[k] = v[j];
            j++;
        } else {
            temp[k] = v[i];
            i++;
        }
    }

    for (k = l; k <= r; k++) {
        v[k] = temp[k];
    }
}


Começa no 0 e vai até o 5
i = 0;
j = 3;   

i = 0; m = 2
j = 3; r = 5

{4, 5, 9, /6, 7, 8};

{4, 5, 6}

COMEÇA AQUI OS I's E J'S:

i = 1; | FINAL DE CADA ITERAÇÃO DO 1 LOOP
j = 3; |


i = 2; 
j = 3; 

i = 2;
j = 4;

i = 2;
j = 5;

i = 2;  |
j = 6;  | j passou r, acabou, copia só o resot que tava no lado do o = 9


i = 3; 
j = 6; 


--------------------------------------------------------

int v[] = {5, 6, 1, 2, 3,/ 4};
int l = 0;
int r = 5;

i = 0
p = 0
v ={5, 6, 1, 2 ,3, /4}

i = 1
p = 0
v ={5, 6, 1, 2 ,3, /4}

i = 2
p = 1
v ={1, 6, 5, 2 ,3, /4} 

i = 3
p = 2
v ={1, 2, 5, 6 ,3, /4} 

i = 4
p = 3
v ={1, 2, 3, 6 ,5, /4} 


OBS: isso não entra no loop
v ={1, 2, 3, 4 ,5, 6} 




